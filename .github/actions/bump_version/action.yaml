name: Bump the release version

runs:
  using: "composite"
  steps:
    - name: Get latest tag
      id: get_latest_tag
      shell: bash
      run: |
        TAG=$(git describe --tags --abbrev=0 || echo "v1.0.0")
        echo "Latest tag: $TAG"
        echo "tag=$TAG" >> $GITHUB_OUTPUT

    - name: Parse next version
      id: bump_version
      shell: bash
      run: |
        TITLE="${{ github.event.pull_request.title }}"
        CURRENT_TAG="${{ steps.get_latest_tag.outputs.tag }}"
        VERSION="${CURRENT_TAG#v}"
        echo $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        #cp .github/actions/bump_version/version.sh version.sh
        #chmod +x version.sh
        if [[ $TITLE == *major* ]]; then
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MAJOR=$((MAJOR + 1))  # Increment PATCH version
          NEW_VERSION="${MAJOR}.0.0"

          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        elif [[ $TITLE == *minor* ]]; then
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MINOR=${VERSION_PARTS[1]}
          MINOR=$((MINOR + 1))  # Increment PATCH version
          NEW_VERSION="${VERSION_PARTS[0]}.$MINOR.0"

          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        else
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))  # Increment PATCH version
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"

          echo "New Version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        fi
    - name: Create a release on pom.xml
      shell: bash
      run: mvn versions:set -DnewVersion=$NEW_VERSION

    - name: Create and push new tag
      shell: bash
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.bump_version.outputs.NEW_VERSION }}
        git push origin ${{ steps.bump_version.outputs.NEW_VERSION }}
        