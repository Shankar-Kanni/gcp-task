name: Spring Boot CI/CD pipeline for GCP/GKE

on:
    push: 
      paths-ignore: 
        - 'README.md'
        - '.github/**'
      branches: 
        - test
    pull_request: 
      branches:
        - main
      types:
        - closed
        - opened
    workflow_dispatch:
      inputs:
        manual:
          default: required
          required: true
            

jobs:
    Build-App-Test:
        permissions: write-all
        runs-on: ubuntu-latest
        outputs:
          VERSION: ${{ steps.jar_version.outputs.VERSION }}
          SONAR: ${{ steps.sonar.outputs.SONAR }}
        steps:  
            - name: Checkout Repo
              uses: actions/checkout@v3
              with:
                fetch-depth: 0


            - name: Authenticate to GCP account
              id: auth
              uses: 'google-github-actions/auth@v2'
              with:
                project_id: ${{ secrets.PROJECTID }}
                workload_identity_provider: ${{ secrets.workload_identity_provider }}
                service_account: ${{ secrets.service_account }}
                token_format: access_token
              

            - name: Setup required Java JDK
              uses: actions/setup-java@v4
              with:
                distribution: 'zulu' # See 'Supported distributions' for available options
                java-version: '17'

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                version: '>= 363.0.0'

            - name: Build SNAPSHOT version and test the application
              id: sonar
              if: ${{ github.event.pull_request.merged == false }}
              run: |
                mvn help:evaluate -Dexpression=project.version -q -DforceStdout
                mvn clean deploy --file pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
                -Dsonar.token=${{ secrets.SONAR_KEY }} \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.organization=shankar-kanni-1 \
                -Dsonar.projectKey=shankar-kanni-1_gcp
                
                # cd target/sonar
                sonar=$(cat target/sonar/report-task.txt | grep dash)
                echo "SONAR=$sonar">> $GITHUB_OUTPUT
                cp target/*.jar spring-boot.jar
                docker build --tag spring-boot:${{ github.sha }} .
                docker images
                docker run --name spring-boot-app -d \
                -p 8080:8080 spring-boot:${{ github.sha }}
                echo Testing Image URL using wget 
                wget -q -O - localhost:8080/api/app/health | grep up

            - name: Bump Version
              if: ${{ github.event.pull_request.merged == true }}
              uses: ./.github/actions/bump_version

            - name: Build the final release version of app and test
              if: ${{ github.event.pull_request.merged == true }}
              run: |
                  mvn clean deploy -Dmaven.test.skip=true --file pom.xml org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
                  -Dsonar.token=${{ secrets.SONAR_KEY }} \
                  -Dsonar.host.url=https://sonarcloud.io \
                  -Dsonar.organization=shankar-kanni-1 \
                  -Dsonar.projectKey=shankar-kanni-1_gcp

              
            - name: Check the Jar availability on the GCP artifactory
              id: jar_version
              if: ${{ github.event.pull_request.merged == true }}
              run : |
                  #cd target
                  #VERSION=$(ls *.jar | sed -E 's/.*-(.*)\.jar/\1/')
                  #echo "VERSION=$VERSION" >> $GITHUB_ENV
                  echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
                  gcloud artifacts files list --project gcp-gke-453620 --repository java-release --location europe-west3 --package com.example:demo --version ${NEW_VERSION}

            - name: Login to Google Artifactory
              if: ${{ github.event.pull_request.merged == true }}
              uses: docker/login-action@v3
              with:
                registry: europe-west3-docker.pkg.dev
                username: oauth2accesstoken
                password: ${{ steps.auth.outputs.access_token }}

            - name: Build docker image and push to Artifactory
              id: docker_image
              if: ${{ github.event.pull_request.merged == true }}
              run: |

                cp target/*.jar spring-boot.jar
                docker build -f Dockerfile --tag "europe-west3-docker.pkg.dev/gcp-gke-453620/docker-repo/spring-boot-app-v1:${NEW_VERSION}" .
                docker push europe-west3-docker.pkg.dev/gcp-gke-453620/docker-repo/spring-boot-app-v1:${NEW_VERSION}

                docker images
                docker run --name spring-boot-app -d  \
                  -p 8080:8080 \
                  europe-west3-docker.pkg.dev/gcp-gke-453620/docker-repo/spring-boot-app-v1:${NEW_VERSION}
                docker ps
                echo Testing Image URL using wget 
                wget -q -O - localhost:8080/api/app/health | grep up

    Comment-PR-on-Success:
      runs-on: ubuntu-latest
      needs: [Build-App-Test]
      permissions:
        issues: write
        pull-requests: write
      if: success() && github.event_name == 'pull_request'
      steps:
        - name: Post a comment if build is successful
          run: |
            pull_request_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -d "{\"body\": \"### PR - #$pull_request_number. \n ### ‚úÖ Build succeeded! Great job! üéâ \n ${{ needs.Build-App-Test.outputs.SONAR }} \"}" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
    
    Comment-PR-on-Failure: 
      runs-on: ubuntu-latest
      needs: [Build-App-Test]
      permissions:
        issues: write
        pull-requests: write
      if: failure() && github.event_name == 'pull_request'
      steps:     
        - name: Post a comment if build fails
          run: |
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -d "{\"body\": \"### PR - #$pull_request_number. \n ### ‚ùå Build failed! Please check the logs. üö® \n ${{ needs.Build-App-Test.outputs.SONAR }} \"}" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments
                                 
                
    deployment_on_dev:
      name: Dev Deployment
      if: ${{ github.event.pull_request.merged == true }}
      # if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request' && github.base_ref == 'dev'
      needs: [Build-App-Test]
      uses: ./.github/workflows/Deploy.yaml        
      with:
        namespace: dev
        IMAGE_TAG: ${{ needs.Build-App-Test.outputs.VERSION }}
      permissions:
        id-token: write
      secrets: inherit
