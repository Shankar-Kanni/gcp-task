name: Spring Boot CI/CD using microk8s on GCP VM

on:
    push: 
      paths-ignore: 
        - 'README.md'
        - '.github/**'
      branches: 
        - main
        - master
    workflow_dispatch:         

jobs:
    build-spring-boot:
        permissions: write-all
        runs-on: ubuntu-latest
        steps:  
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Authenticate to GCP account
              uses: 'google-github-actions/auth@v2'
              with:
                project_id: ${{ secrets.PROJECTID }}
                workload_identity_provider: ${{ secrets.workload_identity_provider }}
                service_account: ${{ secrets.service_account }}
              

            - name: Setup required Java JDK
              uses: actions/setup-java@v4
              with:
                distribution: 'zulu' # See 'Supported distributions' for available options
                java-version: '17'

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                version: '>= 363.0.0'

            - name: Run spring boot
              run: |
                mvn clean deploy --file pom.xml
              
            - name: Check the Jar availability on the GCP artifactory
              id: snapshot
              run : |
                SNAPSHOT=$(cat pom.xml | grep "SNAPSHOT" | sed 's/<version>//g' | awk -F'</version>' '{print $1}') >> $GITHUB_ENV
                gcloud artifacts files list --project gcp-gke-453620 --repository java-maven --location europe-west3 --package com.example:demo --version ${SNAPSHOT}
    dockerization:
        name: Containerization
        needs: [build-spring-boot]
        permissions: write-all
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Authenticate to GCP account
              uses: 'google-github-actions/auth@v2'
              with:
                project_id: ${{ secrets.PROJECTID }}
                workload_identity_provider: ${{ secrets.workload_identity_provider }}
                service_account: ${{ secrets.service_account }}

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                version: '>= 363.0.0'

            - name: Download the jar file
              run: |
                SNAPSHOT=$(cat pom.xml | grep "SNAPSHOT" | sed 's/<version>//g' | awk -F'</version>' '{print $1}') >> $GITHUB_ENV
                echo $SNAPSHOT
                gcloud artifacts files list --project gcp-gke-453620 --repository java-maven --location europe-west3 --package com.example:demo --version ${SNAPSHOT} | grep jar | head -1
                JAR=$(gcloud artifacts files list --project gcp-gke-453620 --repository java-maven --location europe-west3 --package com.example:demo --version ${SNAPSHOT} | grep jar | head -1 | awk '{print $1}' |cut -d "/" -f 5) >> $GITHUB_ENV
                echo $JAR
                echo "TEST"
                URL="https://artifactregistry.googleapis.com/download/v1/projects/gcp-gke-453620/locations/europe-west3/repositories/java-maven/files/com%2Fexample%2Fdemo#${SNAPSHOT}#${JAR}:download?alt=media"
                echo $URL | sed 's/# /%2F/'
                curl -X GET -k -H "Authorization: Bearer $(gcloud auth print-access-token)" --output spring-boot.jar -k "$(echo $URL | sed 's/# /%2F/')"

                ls -lrth | grep "jar"